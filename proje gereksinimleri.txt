Dönem Sonu (Final) Proje Ödevi 
 
Ders: İnternet Programcılığı II Eğitimci: Öğr. Gör. İrfan SUBAŞ 
Projenin Genel Amacı 
Bu proje ödevi, final sınavı yerine geçecek olup, projeden alacağınız not hem final hem de bütünleme sınavı notu olarak değerlendirilecektir. Ödev kapsamında, kullanıcı yönetimi, kimlik doğrulama, rol tabanlı erişim kontrolü ve temel mesajlaşma sistemi gibi işlevleri içeren; belirlediğiniz proje konusuna uygun olarak gerekli temel özellikleri barındıran bir web uygulaması geliştirmeniz beklenmektedir. 
Proje Konusu ve Geliştirme Süreci 
Bu proje ödevi kapsamında geliştireceğiniz uygulamanın konusunu kendiniz belirlemeniz gerekmektedir. Konunuzu belirledikten sonra, "Proje Konu Bildirim Formu" nu doldurarak tarafıma iletmeniz zorunludur. 
Aynı sınıfta yer alan öğrenciler arasında aynı konunun seçilmesi durumunda, projelerinizin en az bir yönüyle birbirinden farklılaştırılması gerekmektedir. Bu nedenle, mümkün olduğunca özgün ve çeşitli konular seçmeye özen göstermeniz beklenmektedir. Aynı ya da çok benzer projelerin değerlendirme sürecinde, kopya şüphesi oluşabileceğini ve bu durumun projelerinizin geçersiz sayılmasına neden olabileceğini unutmayınız. 
Projelerinizi kendi bilgi ve birikiminizle geliştirmeniz, hem öğrenme sürecinizi destekleyecek hem de sizden beklenen emeğin bir göstergesi olacaktır. 
Geliştirme sürecinde zorlandığınız noktalarda, günümüzde yaygın olarak kullanılan yapay zeka araçlarından destek almanız mümkündür. Ancak bu araçların sunduğu çözümlerin her zaman doğru ya da ders kapsamında olmayabileceğini unutmamalısınız. Bu nedenle, yapay zeka tarafından sunulan çözüm önerilerini mutlaka anlamaya çalışmalı, ders dışında kullanmadığımız teknolojiler ya da yapıların yer aldığı çözümleri eleştirel bir gözle değerlendirmelisiniz. 
Projelerinizi geliştirirken yapay zekadan destek almanızda herhangi bir sakınca yoktur. Ancak burada önemli olan, bu destekten ne öğrendiğinizdir. Kodları yalnızca kopyalamak yerine, sunulan çözümlerin mantığını anlamanız ve bu yaklaşımları içselleştirmeniz beklenmektedir. 
Önemli Not: Proje teslimi sırasında, sizlere projenizi nasıl geliştirdiğinizle ilgili bazı sorular yöneltilecektir. Bu sorulara doğru, mantıklı ve tutarlı yanıtlar verebilmeniz önemlidir. Projeyi eksiksiz teslim etmiş olsanız bile, projenizle ilgili yöneltilen sorulara tatmin edici yanıtlar verememeniz durumunda, dersi geçmeniz mümkün olmayacaktır. 
Proje Ekibi 
Projelerinizi bireysel olarak ya da en fazla 2 kişilik gruplar halinde geliştirebilirsiniz. 
 
Bu dokümanda belirtilen tüm proje gereksinimleri, bireysel olarak yapılacak projeler için minimum düzeyde belirlenmiştir. Eğer projeyi grup olarak yapmayı tercih ederseniz, sizden daha yüksek beklentiler olacaktır ve değerlendirme de buna göre yapılacaktır. Tavsiyem, projelerinizi bireysel olarak geliştirmeniz ve bu şekilde teslim etmeniz yönündedir. 
 
"Proje Konu Bildirim Formu" üzerinden proje ekibinizi (bireysel veya grup) proje konunuz ile birlikte iletmeniz gerekmektedir. 
Projede İstenen Temel Özellikler 
Giriş Sayfası 
  Projenin ana konusunu tanıtan ve açıklayan bir giriş sayfası olmalıdır. 
Kullanıcı İşlemleri 
 Sisteme yeni kullanıcıların kaydolabilmesi için bir "Kayıt Ol" (Register) sayfası bulunmalı ve kayıt işlemi düzgün şekilde çalışmalıdır. 
 Kullanıcıların sisteme giriş yapabilmeleri için bir "Giriş Yap" (Login) sayfası yer almalı ve kimlik doğrulama işlemi sorunsuz şekilde gerçekleştirilmelidir. 
 Oturum açmış kullanıcılar için "Çıkış Yap" (Logout) işlevi bulunmalı ve oturum yönetimi doğru şekilde yapılmalıdır. 
 Her kullanıcının kendine ait bir profil sayfası olmalı; bu sayfa üzerinden kullanıcı, kişisel bilgilerini görüntüleyebilmeli ve güncelleyebilmelidir. 
Rol Tabanlı Erişim Kontrolü 
  Sistemde iki temel kullanıcı rolü bulunmalıdır: 
○ Admin 
○ Normal Kullanıcı 
 Kullanıcılar sisteme kayıt olduklarında varsayılan olarak "Normal Kullanıcı" rolüyle sisteme dahil olmalıdır. 
 Rollerin yönetimi için ayrıca bir rol tablosu oluşturmaya gerek yoktur. Roller, kullanıcı tablosunda yer alacak bir sütun (örneğin role alanı) aracılığıyla belirlenmelidir. 
Admin kullanıcılar, normal kullanıcıların yapabildiği tüm işlemleri gerçekleştirebilir.  Buna ek olarak, yalnızca admin kullanıcıların erişebileceği ve gerçekleştirebileceği özel işlevler de sistemde yer almalıdır. 
 
 
 
 
 
➢ Yalnızca Admin Kullanıcıların Erişebileceği İşlevler: 
 
  Kullanıcı Yönetimi 
○ Sistemde kayıtlı tüm kullanıcıları listeleme 
○ Herhangi bir kullanıcıyı silme 
○ Kullanıcıların rollerini değiştirme (Not: Bir admin, kendi rolünü değiştirememelidir.) 
  Proje konusuna uygun olarak en az iki farklı özel işlem daha eklenmelidir. 
○ Örneğin: 
■ Bir e-ticaret projesinde ürün ekleme ve sipariş yönetimi 
■ Bir blog uygulamasında kategori yönetimi ve yazı onaylama gibi 
  Bu erişim kontrol sistemi, middleware kullanılarak uygulanmalı ve admin yetkisi gerektiren tüm sayfalara yalnızca admin kullanıcıların erişebilmesi sağlanmalıdır. 
Mesajlaşma Sistemi 
 Uygulamada kullanıcılar arasında birbirlerine mesaj gönderebilecekleri bir mesajlaşma sistemi yer almalıdır. 
 Gerçek zamanlı (real-time) iletişim zorunlu değildir. Mesajların gönderilmesinden sonra kullanıcı sayfayı yenilediğinde gelen yeni mesajları görebilmelidir. 
 Her kullanıcı, sistemde yer alan diğer tüm kullanıcılara mesaj gönderebilmelidir. Mesajlaşma için herhangi bir arkadaşlık ilişkisi ya da onay mekanizması gerekmemektedir. 
  Mesajlar yalnızca metin (text) formatında olmalıdır. Görsel, video ya da dosya gibi medya türlerinin desteklenmesi gerekmemektedir. 
Veritabanı Yapısı 
 Projede kullanılacak veritabanında en az 5 adet anlamlı ve birbiriyle ilişkili tablo bulunmalıdır. 
 Bu tablolar; uygulamanın işlevselliğini destekleyecek, proje konusuyla uyumlu ve gerçek bir sistemde kullanılabilecek nitelikte olmalıdır. 
 Tablo adları, ilişki yapıları (örneğin: bire çok, çoktan çoğa) ve veri türleri, yazılım geliştirme ve veritabanı tasarımı prensiplerine uygun şekilde dikkatlice seçilmelidir. 
 Tablolar arasında ilişkisel bağlar (foreign key'ler) doğru tanımlanmalı ve ORM (Prisma) üzerinden bu ilişkiler net bir şekilde yönetilmelidir. 
 
 
 
 
 
Teknolojik Gereksinimler 
Projenin geliştirilmesinde aşağıda belirtilen teknolojilerin kullanılması zorunludur: 
  Frontend & Backend: 
Uygulama, hem istemci (frontend) hem sunucu (backend) tarafı işlemleri için Next.js çatısı kullanılarak geliştirilmelidir. 
  Veritabanı: 
Uygulama verileri, yerel geliştirme için uygun olan SQLite veritabanında saklanmalıdır. 
  ORM: 
Veritabanı işlemleri için Prisma ORM kullanılmalı ve tüm veri erişim katmanı bu yapı üzerinden yönetilmelidir. 
  Stil (CSS) Kütüphanesi: 
Arayüz tasarımında kullanılmak üzere aşağıdaki CSS kütüphanelerinden yalnızca biri tercih edilerek kullanılmalıdır: 
○ Tailwind CSS 
○ DaisyUI, Shadcn UI 
○ Bootstrap 
○ Diğer ( Projenin CSS’lerini kendiniz geliştirebilirsiniz fakat önerilmez) 
Not: Seçilen CSS kütüphanesi proje boyunca tutarlı şekilde kullanılmalı, farklı kütüphaneler karıştırılmamalıdır. 
 
 
 
 
 
 
 
 
 
 
 
Proje Teslimi 
Son Teslim Tarihleri 	
Final 	20 Haziran 2025 17:00 
Bütünleme 	04 Temmuz 2025 17:00 
Proje Raporu 
Teslim edeceği projeyle birlikte 3–5 sayfa uzunluğunda bir Proje Ödev Raporu hazırlamanız gerekmektedir. 
Bu raporda aşağıdaki başlıklar mutlaka yer almalıdır: 
●	Proje Konusu ve Amacı: Projenin konusu, hangi problemi çözmeye çalıştığı ve ne amaçla geliştirildiği. 
●	Planlama ve Geliştirme Süreci: Projenin nasıl planlandığı, hangi adımlarla geliştirildiği ve görev paylaşımı (grup projesi ise). 
●	Modüller ve İşlevleri: Projede yer alan temel modüller ve her bir modülün görevi/kapsamı. 
●	Kodlama Yapısı: Proje mimarisi, kullanılan teknolojiler, dosya ve klasör yapısı hakkında genel bir açıklama. 
●	Kazanımlar ve Değerlendirme: Proje sürecinde öğrendiğiniz konular, karşılaştığınız zorluklar ve genel değerlendirme. 
●	Bileşenlerin Genel İşleyişi: Öne çıkan sayfaların veya bileşenlerin nasıl çalıştığına dair genel bir teknik özet. 
Hazırladığınız proje raporunu, proje teslimine gelmeden önce Classroom sistemine yüklemeniz gerekmektedir. Raporunuzu, sistemde size atanan proje ödevi bölümüne yüklemeyi unutmayınız. Proje raporunun sisteme yüklenmediği durumlarda proje teslimi yapılamayacaktır. 
GitHub Paylaşımı 
Geliştirdiğiniz proje, GitHub üzerinden paylaşılmalı ve kaynak kodları açık bir şekilde erişilebilir olmalıdır. Proje deposunda aşağıdaki unsurlar eksiksiz yer almalıdır: 
	README.md Dosyasında Bulunması Gerekenler 
Bölüm 	Açıklama 
Proje Tanımı 	Projenizin ne amaçla geliştirildiği, hangi problemi çözdüğü ve genel işleyişi hakkında kısa bir açıklama. 
Kullanılan 
Teknolojiler 	Next.js, Prisma, SQLite, kullanılan CSS kütüphanesi (TailwindCSS / Bootstrap / Shadcn), varsa ek kütüphaneler. 
Kurulum 
Talimatları 	Projeyi çalıştırmak isteyen birinin izlemesi gereken adımlar (örnek: npm install, .env ayarları, npx prisma migrate, npm run 
dev gibi). 
Admin Giriş 
Bilgileri 	Admin rolüne sahip bir örnek kullanıcı hesabı (örneğin: admin@example.com / admin123) – sadece proje testi için kullanılacaktır. 
README.md dosyanız, projeyi inceleyecek biri için anlaşılır ve yönlendirici olmalıdır. Geliştirme sürecinizde kullandığınız açıklayıcı başlıklara ve görsellere de yer verebilirsiniz. 
Yüz Yüze Proje Teslim Süreci 
●	Projeleriniz, GitHub üzerinde herkese açık bir depo (public repository) olarak paylaşılmalıdır. GitHub proje bağlantısını, Classroom sistemi üzerinde size atanan ilgili ödev alanından iletmiş olmanız gerekmektedir. 
●	Projenin nasıl çalıştığına dair açıklamalar, örnek kullanıcı bilgileri ve kurulum yönergeleri projedeki README.md dosyasında yer almalıdır. 
●	Eksik, hatalı çalışan ya da hiç çalışmayan projeler değerlendirmeye alınmayacaktır. 
●	Proje raporunuz, yüz yüze teslim gününden önce Classroom sistemine yüklenmiş olmalıdır. 
●	Projelerinizin, duyurulan son teslim tarihine kadar tamamlanarak belirtilen şekilde eksiksiz bir biçimde teslim edilmesi gerekmektedir. 
Teslim Günü Bilgilendirmesi 
●	Projelerin yüz yüze teslimi zorunludur. Proje teslimin yapılacağı gün, saat ve yer bilgileri, sınav haftası içerisinde ayrıca duyurulacak bir çizelge ile paylaşılacaktır. 
Grup Projesi Teslimi 
●	Projeyi grup olarak yapan öğrencilerin, tüm grup üyeleriyle birlikte proje teslimine gelmeleri zorunludur. Eksik katılım durumunda proje değerlendirmeye alınmayacaktır. 
 
 
 
 
 
 
Puanlama 
Proje Puanlama Cetveli 
 
Kategori 	Açıklama 	Puan 
Giriş / Tanıtım Sayfası 	Proje konusunun tanıtıldığı ve kullanıcıyı bilgilendiren sayfa tasarımı 	5 
Kullanıcı Kayıt & Giriş 	Kayıt olma, giriş yapma ve oturum (session) yönetimi işlevlerinin uygulanması 	10 
Profil Sayfası 	Kullanıcı bilgilerinin görüntülenip güncellenebildiği bir profil sayfası 	5 
Rol Sistemi ve Middleware 	Admin ve normal kullanıcı rollerinin tanımı, middleware ile sayfa erişim kontrolü 	10 
Admin İşlevleri 	Kullanıcı yönetimi + proje konusuna özgü en az iki admin yetkili özellik 	15 
Mesajlaşma Sistemi 	Kullanıcılar arası metin mesajlaşması, sayfa yenileme ile mesaj güncellemesi 	10 
Veritabanı Tasarımı 	En az 5 anlamlı tablo, doğru ilişkilendirme ve veri bütünlüğü 	5 
Proje Konusu Özgü 
Özellikler 	Seçilen konuya uygun ek işlevlerin başarılı ve işlevsel biçimde eklenmesi 	30 
Arayüz ve Stil Kullanımı 	CSS kütüphanesi (Tailwind, Bootstrap, Shadcn) kullanımı, responsive tasarım 	5 
Kod Kalitesi ve Temizlik 	Dosya düzeni, component yapısı, kod okunabilirliği, yorumlar 	5 
Toplam 	100 
Sınav Nihai Puan Hesap Cetveli 
Puan Türü 	Açıklama 	Hesaplamaya Katkısı 
Proje Puanı (P) 	Proje puanlama cetveline göre yapılan değerlendirme sonucunda alınan puandır.   
(0 - 100) 	% 70 
Değerlendirici Puanı (D) 	Eğitimcinin proje konusu, kodlama, projenin beklentilere uygunluğu vb konularda yapacağı genel değerlendirme puandır. (0 - 100)   	% 30 
	Toplam 	P * 0.7 + D * 0.3 
 
